---

- name: Install the selinux python module
  yum: name=libselinux-python state=present
  when: ansible_os_family == "RedHat"

- name: Copy the epel packages 
  copy: src=epel.repo dest=/etc/yum.repos.d/epel_ansible.repo
  when: ansible_os_family == "RedHat"

- name: Install the nginx packages 
  yum: name={{ item }} state=present
  with_items: redhat_pkg
  when: ansible_os_family == "RedHat"

- name: Install the nginx packages 
  apt: name={{ item }} state=present update_cache=yes
  with_items: ubuntu_pkg
  environment: env
  when: ansible_os_family == "Debian"

- name: Create the directories for site specific configurations
  file: path=/etc/nginx/{{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - "sites-available"
    - "sites-enabled"

- name: Create folder for default site
  file: path=/home/ftpaccess/www state=directory mode=0755

- name: Create default site
  copy: content="<?php\nphpinfo();\n?>" dest=/home/ftpaccess/www/index.php

- name: Copy fastcgi_params template
  template: src=fastcgi_params.j2 dest=/etc/nginx/fastcgi_params

- name: Copy the nginx configuration file 
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: 
   - restart nginx

- name: Create the configurations for sites
  template: src=site.j2 dest=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'

- name: Create the links to enable site configurations
  file: path=/etc/nginx/sites-enabled/{{ item['server']['file_name'] }} state=link src=/etc/nginx/sites-available/{{ item['server']['file_name'] }}
  with_items: nginx_sites
  when: nginx_sites|lower != 'none'
  notify: 
   - reload nginx

- name: start the nginx service
  service: name=nginx state=started enabled=yes

